<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard de Movimientos</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        :root {
            --primary: #4361ee;
            --secondary: #3f37c9;
            --success: #4cc9f0;
            --danger: #f72585;
            --warning: #f8961e;
            --info: #4895ef;
            --light: #f8f9fa;
            --dark: #212529;
            --bg-gradient: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            --card-gradient: linear-gradient(to right bottom, #ffffff, #f8f9fa);
            --sidebar-width: 280px;
        }

        body {
            background-color: #f5f7fb;
            color: #495057;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            transition: all 0.3s ease;
        }

            body.dark-mode {
                background-color: #1a2035;
                color: #e9ecef;
            }

        .theme-switch {
            position: fixed;
            bottom: 20px;
            right: 20px;
            z-index: 1000;
            width: 50px;
            height: 50px;
            border-radius: 50%;
            background: var(--bg-gradient);
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);
            transition: all 0.3s ease;
        }

            .theme-switch:hover {
                transform: translateY(-3px);
                box-shadow: 0 8px 25px rgba(0, 0, 0, 0.2);
            }

        .navbar-custom {
            background: var(--bg-gradient);
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
        }

        .summary-card {
            border-radius: 16px;
            overflow: hidden;
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            background: var(--card-gradient);
            border: none;
        }

            .summary-card:hover {
                transform: translateY(-5px);
                box-shadow: 0 12px 30px rgba(0, 0, 0, 0.1) !important;
            }

        .saldo-card {
            border-radius: 20px;
            padding: 1.5rem 0;
            background: var(--bg-gradient);
            color: white;
            box-shadow: 0 10px 30px rgba(67, 97, 238, 0.3);
            transition: transform 0.3s ease;
        }

            .saldo-card:hover {
                transform: translateY(-5px);
            }

        .icon-saldo {
            width: 70px;
            height: 70px;
            display: flex;
            align-items: center;
            justify-content: center;
            background: rgba(255, 255, 255, 0.2);
            border-radius: 50%;
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);
            margin-bottom: 15px;
        }

        .chart-area {
            width: 100%;
            height: 250px;
            display: flex;
            align-items: center;
            justify-content: center;
        }

            .chart-area canvas {
                width: 100% !important;
                height: 100% !important;
            }

        .card {
            border-radius: 16px;
            overflow: hidden;
            box-shadow: 0 5px 20px rgba(0, 0, 0, 0.05);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            background: var(--card-gradient);
            border: none;
            margin-bottom: 24px;
        }

            .card:hover {
                transform: translateY(-3px);
                box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
            }

        .card-header {
            background: transparent;
            border-bottom: 1px solid rgba(0, 0, 0, 0.05);
            padding: 1.2rem 1.5rem;
            font-weight: 600;
        }

        .btn-eliminar {
            padding: 0.25rem 0.5rem;
            font-size: 0.8rem;
            line-height: 1;
        }

        .list-group-item {
            border: 0;
            border-bottom: 1px solid rgba(0, 0, 0, 0.04);
            padding: 1rem 1.25rem;
            transition: background-color 0.2s ease;
        }

            .list-group-item:hover {
                background-color: rgba(67, 97, 238, 0.05);
            }

        .nav-tabs .nav-link {
            border: none;
            padding: 0.8rem 1.5rem;
            font-weight: 500;
            color: #6c757d;
            border-radius: 10px;
            margin: 0 5px;
            transition: all 0.3s ease;
        }

            .nav-tabs .nav-link.active {
                background: var(--bg-gradient);
                color: white;
                border-radius: 10px;
                box-shadow: 0 5px 15px rgba(67, 97, 238, 0.2);
            }

        .nav-tabs {
            border-bottom: 1px solid rgba(0, 0, 0, 0.05);
            padding: 0.5rem;
        }

        .form-control, .form-select {
            border-radius: 10px;
            padding: 0.75rem 1rem;
            border: 1px solid #e2e8f0;
            transition: all 0.3s ease;
        }

            .form-control:focus, .form-select:focus {
                box-shadow: 0 0 0 3px rgba(67, 97, 238, 0.2);
                border-color: #4361ee;
            }

        .btn {
            border-radius: 10px;
            padding: 0.75rem 1.5rem;
            font-weight: 500;
            transition: all 0.3s ease;
        }

        .btn-success {
            background: linear-gradient(to right, #2ecc71, #1abc9c);
            border: none;
            box-shadow: 0 5px 15px rgba(46, 204, 113, 0.3);
        }

            .btn-success:hover {
                transform: translateY(-2px);
                box-shadow: 0 8px 20px rgba(46, 204, 113, 0.4);
            }

        .table th {
            border-top: none;
            font-weight: 600;
            color: #6c757d;
            background-color: rgba(67, 97, 238, 0.05);
        }

        .table td {
            vertical-align: middle;
            padding: 1rem 0.75rem;
        }

        /* Dark mode styles */
        body.dark-mode .card {
            background: linear-gradient(to right bottom, #2a2f4c, #1a2035);
            color: #e9ecef;
            box-shadow: 0 5px 20px rgba(0, 0, 0, 0.2);
        }

        body.dark-mode .summary-card {
            background: linear-gradient(to right bottom, #2a2f4c, #1a2035);
        }

        body.dark-mode .form-control,
        body.dark-mode .form-select {
            background-color: #2a2f4c;
            border-color: #393f55;
            color: #e9ecef;
        }

        body.dark-mode .table {
            color: #e9ecef;
        }

            body.dark-mode .table th {
                background-color: rgba(67, 97, 238, 0.1);
                color: #b7b9cc;
            }

        body.dark-mode .list-group-item {
            background-color: #2a2f4c;
            border-color: #393f55;
        }

        body.dark-mode .nav-tabs {
            border-bottom-color: #393f55;
        }

        body.dark-mode .nav-link {
            color: #b7b9cc;
        }

        /* Animations */
        @@keyframes fadeIn {
            from

        {
            opacity: 0;
            transform: translateY(20px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }

        }

        .animate-fadeIn {
            animation: fadeIn 0.6s ease forwards;
        }

        /* Custom scrollbar */
        ::-webkit-scrollbar {
            width: 8px;
        }

        ::-webkit-scrollbar-track {
            background: #f1f1f1;
            border-radius: 10px;
        }

        ::-webkit-scrollbar-thumb {
            background: var(--primary);
            border-radius: 10px;
        }

        body.dark-mode ::-webkit-scrollbar-track {
            background: #2a2f4c;
        }

        body.dark-mode ::-webkit-scrollbar-thumb {
            background: #4cc9f0;
        }

        /* Responsive adjustments */
        @@media (max-width: 991px) {
            .saldo-card

        {
            margin-bottom: 20px;
        }

        .display-6 {
            font-size: 2rem;
        }

        }

        /* Loading spinner */
        .spinner-container {
            display: flex;
            justify-content: center;
            align-items: center;
            height: 200px;
        }

        .spinner {
            width: 40px;
            height: 40px;
            border: 4px solid rgba(67, 97, 238, 0.1);
            border-radius: 50%;
            border-top: 4px solid var(--primary);
            animation: spin 1s linear infinite;
        }

        @@keyframes spin {
            0%

        {
            transform: rotate(0deg);
        }

        100% {
            transform: rotate(360deg);
        }

        }
    </style>
</head>
<body>
    <!-- Navbar -->
    <nav class="navbar navbar-expand-lg navbar-dark navbar-custom">
        <div class="container">
            <a class="navbar-brand d-flex align-items-center" href="#">
                <i class="bi bi-graph-up-arrow me-2 fs-3"></i>
                <span class="fw-bold">Finanzas Pro</span>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarContent">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarContent">
                <ul class="navbar-nav ms-auto mb-2 mb-lg-0">
                    <li class="nav-item">
                        <a class="nav-link active" href="#">
                            <i class="bi bi-speedometer2 me-1"></i> Dashboard
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#">
                            <i class="bi bi-wallet2 me-1"></i> Cuentas
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#">
                            <i class="bi bi-bar-chart me-1"></i> Reportes
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#">
                            <i class="bi bi-gear me-1"></i> Configuración
                        </a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>

    <div class="container mt-4">
        <div class="text-center mb-4 animate-fadeIn">
            <h2 class="fw-bold text-gradient">Dashboard de Movimientos</h2>
            <p class="text-muted">Gestiona y analiza tus finanzas personales</p>
        </div>

        <!-- Filtros de fecha -->
        <div class="row mb-4 animate-fadeIn" style="animation-delay: 0.2s;">
            <div class="col-md-12">
                <div class="card">
                    <div class="card-body">
                        <div class="row align-items-center">
                            <div class="col-md-6">
                                <h6 class="mb-0">Filtrar por fecha:</h6>
                            </div>
                            <div class="col-md-6 text-end">
                                <div class="btn-group" role="group">
                                    <button type="button" class="btn btn-outline-primary active">Hoy</button>
                                    <button type="button" class="btn btn-outline-primary">Semana</button>
                                    <button type="button" class="btn btn-outline-primary">Mes</button>
                                    <button type="button" class="btn btn-outline-primary">Personalizado</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Top summary: Ingresos | Saldo (centro) | Gastos -->
        <div class="row g-3 align-items-center mb-4 animate-fadeIn" style="animation-delay: 0.4s;">
            <div class="col-md-3">
                <div class="card shadow-sm h-100 summary-card">
                    <div class="card-body text-center">
                        <small class="text-muted">Ingresos</small>
                        <div class="d-flex align-items-center justify-content-center mt-2">
                            <i class="bi bi-arrow-up-circle-fill fs-3 text-success me-2"></i>
                            <div>
                                <h5 class="mb-0" id="cardIngresos">S/ 0.00</h5>
                            </div>
                        </div>
                        <div class="mt-2">
                            <span class="badge bg-success" id="ingresoGrowth">+0%</span>
                            <small class="text-muted ms-1">vs mes anterior</small>
                        </div>
                    </div>
                </div>
            </div>

            <!-- SALDO CENTRAL -->
            <div class="col-md-6">
                <div class="card text-center h-100 saldo-card">
                    <div class="card-body d-flex flex-column align-items-center justify-content-center">
                        <div class="icon-saldo mb-2">
                            <i class="bi bi-cash-stack fs-2 text-white"></i>
                        </div>
                        <small>Saldo Total</small>
                        <h1 class="display-6 fw-bold mb-0" id="cardSaldo">S/ 0.00</h1>
                        <div class="small mt-1 opacity-75">Total disponible</div>
                        <div class="mt-3">
                            <span class="badge bg-light text-dark" id="saldoGrowth">+0%</span>
                            <small class="ms-1 opacity-75">vs mes anterior</small>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-md-3">
                <div class="card shadow-sm h-100 summary-card">
                    <div class="card-body text-center">
                        <small class="text-muted">Gastos</small>
                        <div class="d-flex align-items-center justify-content-center mt-2">
                            <i class="bi bi-arrow-down-circle-fill fs-3 text-danger me-2"></i>
                            <div>
                                <h5 class="mb-0" id="cardGastos">S/ 0.00</h5>
                            </div>
                        </div>
                        <div class="mt-2">
                            <span class="badge bg-danger" id="gastoGrowth">+0%</span>
                            <small class="text-muted ms-1">vs mes anterior</small>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Gráfico de tendencia de saldo -->
        <div class="row mb-4 animate-fadeIn" style="animation-delay: 0.6s;">
            <div class="col-md-12">
                <div class="card">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <strong>Tendencia de Saldo</strong>
                        <div class="btn-group btn-group-sm" role="group">
                            <button type="button" class="btn btn-outline-primary active">7D</button>
                            <button type="button" class="btn btn-outline-primary">1M</button>
                            <button type="button" class="btn btn-outline-primary">3M</button>
                            <button type="button" class="btn btn-outline-primary">1A</button>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="chart-area" style="height: 300px;">
                            <canvas id="chartTendencia"></canvas>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Contenido principal: ahora solo columna central con Form + Gráficos + listas debajo de cada gráfico -->
        <div class="row g-4 animate-fadeIn" style="animation-delay: 0.8s;">
            <div class="col-md-12">
                <!-- Formulario arriba de "Distribución por categoría" -->
                <div class="card shadow-sm mb-4">
                    <div class="card-header bg-transparent"><strong>Agregar Movimiento</strong></div>
                    <div class="card-body">
                        <form id="formMovimiento" class="needs-validation" novalidate>
                            <input type="hidden" id="txtMovimientoId" value="0" />
                            <div class="row">
                                <div class="col-md-6 mb-2">
                                    <label class="form-label">Tipo</label>
                                    <select id="selTipo" class="form-select">
                                        <option value="G">Gasto</option>
                                        <option value="I">Ingreso</option>
                                    </select>
                                </div>
                                <div class="col-md-6 mb-2">
                                    <label class="form-label">Categoría</label>
                                    <select id="selCategoria" class="form-select"></select>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-3 mb-2">
                                    <label class="form-label">Fecha</label>
                                    <input type="date" id="txtFechaOperacion" class="form-control" />
                                </div>
                                <div class="col-md-3 mb-2">
                                    <label class="form-label">Monto</label>
                                    <input type="number" step="0.01" id="txtMonto" class="form-control" />
                                </div>
                                <div class="col-md-6 mb-2">
                                    <label class="form-label">Comentario</label>
                                    <textarea id="txtComentario" class="form-control" rows="1"></textarea>
                                </div>
                            </div>

                            <div class="d-grid">
                                <button class="btn btn-success" type="submit">
                                    <i class="bi bi-check-circle me-2"></i> Guardar Movimiento
                                </button>
                            </div>
                        </form>
                    </div>
                </div>

                <!-- Distribución: ahora por pestañas (cada tipo en su panel) -->
                <div class="card shadow-sm">
                    <div class="card-header p-0 bg-transparent">
                        <ul class="nav nav-tabs justify-content-center px-3" id="movimientosTabs" role="tablist">
                            <li class="nav-item" role="presentation">
                                <button class="nav-link active d-flex align-items-center" id="gastos-tab" data-bs-toggle="tab" data-bs-target="#pane-gastos" type="button" role="tab" aria-controls="pane-gastos" aria-selected="true">
                                    <i class="bi bi-arrow-down-circle me-2"></i> Gastos
                                </button>
                            </li>
                            <li class="nav-item" role="presentation">
                                <button class="nav-link d-flex align-items-center" id="ingresos-tab" data-bs-toggle="tab" data-bs-target="#pane-ingresos" type="button" role="tab" aria-controls="pane-ingresos" aria-selected="false">
                                    <i class="bi bi-arrow-up-circle me-2"></i> Ingresos
                                </button>
                            </li>
                        </ul>
                    </div>

                    <div class="card-body p-3">
                        <div class="tab-content" id="movimientosTabsContent">
                            <!-- PANE GASTOS -->
                            <div class="tab-pane fade show active" id="pane-gastos" role="tabpanel" aria-labelledby="gastos-tab">
                                <div class="d-flex flex-column align-items-stretch">
                                    <div class="d-flex justify-content-between align-items-center mb-2">
                                        <strong class="mb-0">Distribución de Gastos por Categoría</strong>
                                        <small class="text-muted" id="totalGastosLabel">S/ 0.00</small>
                                    </div>

                                    <!-- contenedor fijo para control de tamaño -->
                                    <div class="chart-area mb-2">
                                        <canvas id="chartGastos"></canvas>
                                    </div>

                                    <div class="text-center small text-muted mt-2" id="noDataGastos" style="display:none;">No hay datos de gastos</div>

                                    <div class="mt-3">
                                        <strong class="small">Gastos recientes</strong>
                                        <ul class="list-group list-group-flush mt-2" id="listaGastosChart"></ul>
                                    </div>
                                </div>
                            </div>

                            <!-- PANE INGRESOS -->
                            <div class="tab-pane fade" id="pane-ingresos" role="tabpanel" aria-labelledby="ingresos-tab">
                                <div class="d-flex flex-column align-items-stretch">
                                    <div class="d-flex justify-content-between align-items-center mb-2">
                                        <strong class="mb-0">Distribución de Ingresos por Categoría</strong>
                                        <small class="text-muted" id="totalIngresosLabel">S/ 0.00</small>
                                    </div>

                                    <!-- contenedor fijo para control de tamaño -->
                                    <div class="chart-area mb-2">
                                        <canvas id="chartIngresos"></canvas>
                                    </div>

                                    <div class="text-center small text-muted mt-2" id="noDataIngresos" style="display:none;">No hay datos de ingresos</div>

                                    <div class="mt-3">
                                        <strong class="small">Ingresos recientes</strong>
                                        <ul class="list-group list-group-flush mt-2" id="listaIngresosChart"></ul>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- /Distribución -->
            </div>
        </div>

        <!-- Tabla de movimientos recientes (abajo) -->
        <div class="row mt-4 animate-fadeIn" style="animation-delay: 1s;">
            <div class="col-12">
                <div class="card shadow-sm">
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-center mb-3">
                            <h5 class="mb-0">Movimientos recientes</h5>
                            <div class="d-flex">
                                <input type="text" class="form-control form-control-sm me-2" placeholder="Buscar..." id="searchInput">
                                <button class="btn btn-sm btn-outline-primary">
                                    <i class="bi bi-sort-down"></i> Ordenar
                                </button>
                            </div>
                        </div>
                        <div class="table-responsive">
                            <table class="table table-sm mb-0" id="tblRecientes">
                                <thead>
                                    <tr>
                                        <th>Fecha</th>
                                        <th>Categoría</th>
                                        <th>Tipo</th>
                                        <th class="text-end">Monto</th>
                                        <th>Comentario</th>
                                        <th>Acciones</th>
                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal de confirmación para eliminar -->
    <div class="modal fade" id="confirmDeleteModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Confirmar eliminación</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p>¿Estás seguro de que deseas eliminar este movimiento? Esta acción no se puede deshacer.</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    <button type="button" class="btn btn-danger" id="confirmDeleteBtn">Eliminar</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Botón de cambio de tema -->
    <div class="theme-switch">
        <i class="bi bi-moon-fill text-white"></i>
    </div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels@2.0.0"></script>

    <script>
        $(function(){
            // Configuración inicial
            const fmt = (v) => {
                try {
                    return new Intl.NumberFormat('es-PE', { style: 'currency', currency: 'PEN' }).format(Number(v || 0));
                } catch (e) {
                    return 'S/ ' + (Number(v || 0)).toFixed(2);
                }
            };

            const palette = (n) => {
                const base = ['#4dc9f6','#f67019','#f53794','#537bc4','#acc236','#166a8f','#00a950','#58595b','#8549ba','#b91d47'];
                const out = [];
                for (let i=0;i<n;i++) out.push(base[i % base.length]);
                return out;
            };

            let chartGastos = null;
            let chartIngresos = null;
            let chartTendencia = null;
            let movimientoToDelete = null;

            // Inicializar la aplicación
            const init = async () => {
                await cargarCategorias();
                await cargarEstadisticas();
                inicializarEventos();
                inicializarTema();
            };

            // Cargar categorías desde el servidor
            const cargarCategorias = async () => {
                try {
                    // Simulación de datos - en una aplicación real, harías una llamada AJAX
                    const categorias = [
                        { categoriaId: 1, nombre: "Alimentación" },
                        { categoriaId: 2, nombre: "Transporte" },
                        { categoriaId: 3, nombre: "Vivienda" },
                        { categoriaId: 4, nombre: "Salud" },
                        { categoriaId: 5, nombre: "Entretenimiento" },
                        { categoriaId: 6, nombre: "Educación" },
                        { categoriaId: 7, nombre: "Salario" },
                        { categoriaId: 8, nombre: "Freelance" },
                        { categoriaId: 9, nombre: "Inversiones" }
                    ];

                    const sel = $('#selCategoria').empty();
                    categorias.forEach(c => sel.append(`<option value="${c.categoriaId}">${c.nombre}</option>`));
                } catch (err) {
                    $('#selCategoria').empty().append(`<option value="0">Sin categorías</option>`);
                }
            };

            // Cargar estadísticas (simuladas para el ejemplo)
            const cargarEstadisticas = async () => {
                // Simulamos una demora de red
                $('#tblRecientes tbody').html('<tr><td colspan="6" class="text-center"><div class="spinner-container"><div class="spinner"></div></div></td></tr>');

                setTimeout(() => {
                    // Datos simulados
                    const res = {
                        totalIngresos: 4850.75,
                        totalGastos: 2150.50,
                        saldo: 2700.25,
                        recientes: [
                            { movimientoId: 1, fechaOperacion: "2023-05-15", categoria: "Alimentación", tipo: "Gasto", monto: 85.50, comentario: "Supermercado" },
                            { movimientoId: 2, fechaOperacion: "2023-05-14", categoria: "Salario", tipo: "Ingreso", monto: 2500.00, comentario: "Pago nómina" },
                            { movimientoId: 3, fechaOperacion: "2023-05-12", categoria: "Transporte", tipo: "Gasto", monto: 35.00, comentario: "Gasolina" },
                            { movimientoId: 4, fechaOperacion: "2023-05-10", categoria: "Freelance", tipo: "Ingreso", monto: 1200.00, comentario: "Proyecto cliente" },
                            { movimientoId: 5, fechaOperacion: "2023-05-08", categoria: "Vivienda", tipo: "Gasto", monto: 750.00, comentario: "Alquiler" },
                            { movimientoId: 6, fechaOperacion: "2023-05-05", categoria: "Entretenimiento", tipo: "Gasto", monto: 45.00, comentario: "Cine" },
                            { movimientoId: 7, fechaOperacion: "2023-05-03", categoria: "Inversiones", tipo: "Ingreso", monto: 1150.75, comentario: "Dividendos" },
                            { movimientoId: 8, fechaOperacion: "2023-05-01", categoria: "Salud", tipo: "Gasto", monto: 1235.00, comentario: "Seguro médico" }
                        ],
                        totalesPorCategoria: [
                            { categoriaNombre: "Alimentación", tipo: "Gasto", total: 385.50 },
                            { categoriaNombre: "Transporte", tipo: "Gasto", total: 135.00 },
                            { categoriaNombre: "Vivienda", tipo: "Gasto", total: 750.00 },
                            { categoriaNombre: "Salud", tipo: "Gasto", total: 1235.00 },
                            { categoriaNombre: "Entretenimiento", tipo: "Gasto", total: 145.00 },
                            { categoriaNombre: "Salario", tipo: "Ingreso", total: 2500.00 },
                            { categoriaNombre: "Freelance", tipo: "Ingreso", total: 1200.00 },
                            { categoriaNombre: "Inversiones", tipo: "Ingreso", total: 1150.75 }
                        ]
                    };

                    // Actualizar cards
                    $('#cardIngresos').text(fmt(res.totalIngresos));
                    $('#cardGastos').text(fmt(res.totalGastos));
                    $('#cardSaldo').text(fmt(res.saldo));

                    // Actualizar crecimiento (simulado)
                    $('#ingresoGrowth').text('+12%');
                    $('#gastoGrowth').text('+5%');
                    $('#saldoGrowth').text('+18%');

                    // Llenar tabla
                    const tbody = $('#tblRecientes tbody').empty();
                    res.recientes.forEach(r => {
                        const tipoClass = r.tipo === 'Gasto' ? 'text-danger' : 'text-success';
                        const tipoIcon = r.tipo === 'Gasto' ? 'bi-arrow-down-circle' : 'bi-arrow-up-circle';

                        tbody.append(`<tr>
                            <td>${formatearFecha(r.fechaOperacion)}</td>
                            <td>${r.categoria}</td>
                            <td><i class="bi ${tipoIcon} ${tipoClass} me-1"></i> ${r.tipo}</td>
                            <td class="text-end fw-bold ${tipoClass}">${fmt(Number(r.monto || 0))}</td>
                            <td>${r.comentario || '-'}</td>
                            <td>
                                <button class="btn btn-sm btn-outline-primary me-1"><i class="bi bi-pencil"></i></button>
                                <button class="btn btn-sm btn-outline-danger btn-eliminar" data-id="${r.movimientoId}"><i class="bi bi-trash"></i></button>
                            </td>
                        </tr>`);
                    });

                    // Procesar datos para gráficos
                    procesarDatosGraficos(res);

                    // Inicializar gráfico de tendencia
                    inicializarGraficoTendencia();

                }, 1000);
            };

            // Formatear fecha a formato local
            const formatearFecha = (fechaStr) => {
                const fecha = new Date(fechaStr);
                return fecha.toLocaleDateString('es-ES');
            };

            // Procesar datos para gráficos
            const procesarDatosGraficos = (res) => {
                const isGasto = (t) => (t || '').toString().toUpperCase().startsWith('G');
                const isIngreso = (t) => (t || '').toString().toUpperCase().startsWith('I');

                // Separar gastos e ingresos
                const gastos = {};
                const ingresos = {};

                (res.totalesPorCategoria || []).forEach(x => {
                    const tipo = (x.tipo || '').toString();
                    const nombre = x.categoriaNombre || 'Sin categoría';
                    const total = Number(x.total || 0);

                    if (isGasto(tipo)) {
                        gastos[nombre] = (gastos[nombre] || 0) + total;
                    } else if (isIngreso(tipo)) {
                        ingresos[nombre] = (ingresos[nombre] || 0) + total;
                    }
                });

                // Actualizar labels totales
                const totalGastos = Object.values(gastos).reduce((a, b) => a + b, 0);
                const totalIngresos = Object.values(ingresos).reduce((a, b) => a + b, 0);

                $('#totalGastosLabel').text(fmt(totalGastos));
                $('#totalIngresosLabel').text(fmt(totalIngresos));

                // Manejar mensajes no-data
                $('#noDataGastos').toggle(!Object.keys(gastos).length);
                $('#noDataIngresos').toggle(!Object.keys(ingresos).length);

                // Destruir charts previos
                if (chartGastos) {
                    chartGastos.destroy();
                    chartGastos = null;
                }

                if (chartIngresos) {
                    chartIngresos.destroy();
                    chartIngresos = null;
                }

                // Crear gráfico de gastos
                if (Object.keys(gastos).length) {
                    const ctxG = document.getElementById('chartGastos').getContext('2d');
                    chartGastos = new Chart(ctxG, {
                        type: 'doughnut',
                        data: {
                            labels: Object.keys(gastos),
                            datasets: [{
                                data: Object.values(gastos),
                                backgroundColor: palette(Object.keys(gastos).length),
                                borderWidth: 0
                            }]
                        },
                        options: {
                            animation: { duration: 0 },
                            responsive: true,
                            maintainAspectRatio: false,
                            plugins: {
                                legend: {
                                    position: 'bottom',
                                    labels: { font: { size: 11 } }
                                },
                                tooltip: {
                                    callbacks: {
                                        label: function(ctx) {
                                            return `${ctx.label}: ${fmt(ctx.raw || 0)}`;
                                        }
                                    }
                                }
                            }
                        }
                    });
                }

                // Crear gráfico de ingresos
                if (Object.keys(ingresos).length) {
                    const ctxI = document.getElementById('chartIngresos').getContext('2d');
                    chartIngresos = new Chart(ctxI, {
                        type: 'doughnut',
                        data: {
                            labels: Object.keys(ingresos),
                            datasets: [{
                                data: Object.values(ingresos),
                                backgroundColor: palette(Object.keys(ingresos).length),
                                borderWidth: 0
                            }]
                        },
                        options: {
                            animation: { duration: 0 },
                            responsive: true,
                            maintainAspectRatio: false,
                            plugins: {
                                legend: {
                                    position: 'bottom',
                                    labels: { font: { size: 11 } }
                                },
                                tooltip: {
                                    callbacks: {
                                        label: function(ctx) {
                                            return `${ctx.label}: ${fmt(ctx.raw || 0)}`;
                                        }
                                    }
                                }
                            }
                        }
                    });
                }

                // Poblar listas específicas bajo cada gráfico
                const gastosRecientes = (res.recientes || []).filter(r => isGasto(r.tipo)).slice(0, 4);
                const ingresosRecientes = (res.recientes || []).filter(r => isIngreso(r.tipo)).slice(0, 4);

                const gastosChartList = $('#listaGastosChart').empty();
                const ingresosChartList = $('#listaIngresosChart').empty();

                if (!gastosRecientes.length) {
                    gastosChartList.append('<li class="list-group-item text-muted small">No hay movimientos recientes de gasto</li>');
                } else {
                    gastosRecientes.forEach(r => gastosChartList.append(crearItemLista(r)));
                }

                if (!ingresosRecientes.length) {
                    ingresosChartList.append('<li class="list-group-item text-muted small">No hay movimientos recientes de ingreso</li>');
                } else {
                    ingresosRecientes.forEach(r => ingresosChartList.append(crearItemLista(r)));
                }
            };

            // Crear elemento de lista para movimientos recientes
            const crearItemLista = (r) => {
                const fecha = formatearFecha(r.fechaOperacion || r.fecha || '');
                const nombre = r.categoriaNombre ?? r.categoria ?? '';
                const montoFmt = fmt(Number(r.monto || 0));
                const tipo = r.tipo ?? '';
                const tipoClass = tipo === 'Gasto' ? 'text-danger' : 'text-success';

                return `
                    <li class="list-group-item d-flex justify-content-between align-items-center py-2">
                        <div class="d-flex align-items-center">
                            <div class="me-3 ${tipoClass}">
                                <i class="bi ${tipo === 'Gasto' ? 'bi-arrow-down-circle' : 'bi-arrow-up-circle'} fs-5"></i>
                            </div>
                            <div>
                                <div class="fw-semibold">${nombre}</div>
                                <div class="text-muted small">${fecha}</div>
                            </div>
                        </div>
                        <div class="text-end">
                            <div class="fw-bold ${tipoClass}">${montoFmt}</div>
                            <div class="small text-muted">${r.comentario || ''}</div>
                        </div>
                    </li>`;
            };

            // Inicializar gráfico de tendencia
            const inicializarGraficoTendencia = () => {
                const ctx = document.getElementById('chartTendencia').getContext('2d');

                // Datos de ejemplo para la tendencia
                const datosTendencia = {
                    labels: ['Ene', 'Feb', 'Mar', 'Abr', 'May', 'Jun', 'Jul', 'Ago', 'Sep', 'Oct', 'Nov', 'Dic'],
                    datasets: [
                        {
                            label: 'Ingresos',
                            data: [3200, 2900, 3500, 3800, 4200, 4800, 5100, 4900, 5300, 5500, 5800, 6200],
                            borderColor: '#4cc9f0',
                            backgroundColor: 'rgba(76, 201, 240, 0.1)',
                            fill: true,
                            tension: 0.4
                        },
                        {
                            label: 'Gastos',
                            data: [2200, 2000, 2300, 2500, 2700, 3000, 3200, 3100, 2900, 2800, 3000, 3200],
                            borderColor: '#f72585',
                            backgroundColor: 'rgba(247, 37, 133, 0.1)',
                            fill: true,
                            tension: 0.4
                        }
                    ]
                };

                if (chartTendencia) {
                    chartTendencia.destroy();
                }

                chartTendencia = new Chart(ctx, {
                    type: 'line',
                    data: datosTendencia,
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        plugins: {
                            legend: {
                                position: 'top',
                            },
                            tooltip: {
                                mode: 'index',
                                intersect: false,
                                callbacks: {
                                    label: function(ctx) {
                                        return `${ctx.dataset.label}: ${fmt(ctx.raw)}`;
                                    }
                                }
                            }
                        },
                        scales: {
                            y: {
                                beginAtZero: true,
                                grid: {
                                    drawBorder: false
                                },
                                ticks: {
                                    callback: function(value) {
                                        return fmt(value);
                                    }
                                }
                            },
                            x: {
                                grid: {
                                    display: false
                                }
                            }
                        }
                    }
                });
            };

            // Inicializar eventos
            const inicializarEventos = () => {
                // Submit guardar
                $('#formMovimiento').submit(async function(e){
                    e.preventDefault();
                    // Aquí iría la lógica para guardar el movimiento
                    alert('Movimiento guardado (simulado)');
                    $('#formMovimiento')[0].reset();
                    $('#txtFechaOperacion').val(new Date().toISOString().split('T')[0]);
                });

                // Eliminar movimiento
                $(document).on('click', '.btn-eliminar', function(){
                    const id = $(this).data('id');
                    movimientoToDelete = id;
                    $('#confirmDeleteModal').modal('show');
                });

                // Confirmar eliminación
                $('#confirmDeleteBtn').click(function(){
                    if (movimientoToDelete) {
                        // Aquí iría la lógica para eliminar el movimiento
                        alert(`Movimiento ${movimientoToDelete} eliminado (simulado)`);
                        movimientoToDelete = null;
                        $('#confirmDeleteModal').modal('hide');
                    }
                });

                // Cambio de tema
                $('.theme-switch').click(function(){
                    $('body').toggleClass('dark-mode');
                    const icon = $(this).find('i');
                    if ($('body').hasClass('dark-mode')) {
                        icon.removeClass('bi-moon-fill').addClass('bi-sun-fill');
                    } else {
                        icon.removeClass('bi-sun-fill').addClass('bi-moon-fill');
                    }

                    // Actualizar gráficos después del cambio de tema
                    setTimeout(() => {
                        if (chartGastos) chartGastos.update();
                        if (chartIngresos) chartIngresos.update();
                        if (chartTendencia) chartTendencia.update();
                    }, 300);
                });

                // Redibujar gráficos al cambiar pestaña
                $('#movimientosTabs').on('shown.bs.tab', function (e) {
                    const targetId = e.target.id;
                    setTimeout(() => {
                        if (targetId === 'gastos-tab' && chartGastos) {
                            chartGastos.update();
                        } else if (targetId === 'ingresos-tab' && chartIngresos) {
                            chartIngresos.update();
                        }
                    }, 100);
                });
            };

            // Inicializar tema desde localStorage
            const inicializarTema = () => {
                const darkMode = localStorage.getItem('darkMode') === 'true';
                if (darkMode) {
                    $('body').addClass('dark-mode');
                    $('.theme-switch i').removeClass('bi-moon-fill').addClass('bi-sun-fill');
                }

                // Guardar preferencia de tema
                $('.theme-switch').click(function(){
                    const isDarkMode = $('body').hasClass('dark-mode');
                    localStorage.setItem('darkMode', isDarkMode);
                });
            };

            // Inicializar fecha campo
            $('#txtFechaOperacion').val(new Date().toISOString().split('T')[0]);

            // Iniciar la aplicación
            init();
        });
    </script>
</body>
</html>